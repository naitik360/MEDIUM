class Solution {
public:
    int dp[102][102];
    int find(int n,int m,vector<vector<int>>& v)
    {
        if(n==0 && m==0 && v[n][m]!=1)
            return 1;
        else if( n<0 || m<0 )
            return 0;
        else if(v[n][m]==1)
            return 0;
        
        if(dp[n][m] != -1)
            return dp[n][m];
        int t=find(n-1,m,v);
        int z=find(n,m-1,v);
        dp[n][m]=t+z;
        
        return t+z;  
    }
    int uniquePathsWithObstacles(vector<vector<int>>& v) {
        memset(dp,-1,sizeof(dp));
        int n=v.size()-1,m=v[0].size()-1;
        return find(n,m,v);
    }
};

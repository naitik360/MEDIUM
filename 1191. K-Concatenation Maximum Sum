const int m=1000000007;
class Solution {
public:
    long long int kadan(vector<int>& v)
    {
         long long int curr=0,mt=0;
        
         for(int i=0;i<v.size();i++)
         {
             curr=curr+v[i];
             
             if(curr>0)
                mt=max(mt,curr);
             else if(curr<0)
                 curr=0;
         }
        
        return mt;
    }
    int kConcatenationMaxSum(vector<int>& v, int k) {
         long long int ans=0;
        if(k==1)
          ans=kadan(v);
        else
        {   
            long long int s=0;
            for(auto i : v)
                  s+=i;
            
            vector<int> a;
            for(auto i : v)
                a.push_back(i);
            for(auto i : v)
                a.push_back(i);

            if(s<0)
            {   
                
                ans=kadan(a);
                
            }
            else
            {
                ans=(kadan(a)%m+((k-2)*s)%m)%m;
            }
        }
        if(ans>0)
             return ans;
        else
             return 0;
    }
};

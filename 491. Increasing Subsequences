class Solution {
public:
    vector<vector<int>> ans;
    set<vector<int>>s;
    void DFS(vector<int> v,vector<int> a,int i)
    {
        if(a.size()>1)
        {   
            if(s.find(a)==s.end())
            {
                ans.push_back(a);
                s.insert(a);
            }
        }
        if(i==v.size())
             return ;
        
        
        for(int j=i+1;j<v.size();j++)
        {   
            if(v[j]>=v[i])
            {
                a.push_back(v[j]);
                DFS(v,a,j);
                a.pop_back();
            }
        }
    }
    vector<vector<int>> findSubsequences(vector<int>& v) {
        for(int i=0;i<v.size();i++)
        {   
            vector<int> a;
            a.push_back(v[i]);
            DFS(v,a,i);
        }
      return ans;
    }
};

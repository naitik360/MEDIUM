class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
       if(!root) return 0;
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        int max_size=0;
        
        while(!q.empty()){
            int size=q.size();
            
            int start = q.front().second;
            int end = q.back().second;
            max_size=max(end-start+1,max_size);
            
            for(int i=0;i<size;i++){
                pair<TreeNode*,int> pr=q.front(); 
                q.pop();
                int idx = pr.second-start;
                if(pr.first->left) q.push({pr.first->left,2*idx+1});
                if(pr.first->right) q.push({pr.first->right,2*idx+2});
            }
        }
        return max_size;
    }
};

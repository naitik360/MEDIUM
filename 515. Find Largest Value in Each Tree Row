/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root){
    vector<int> v;
    if(!root)
     return v;
    queue<TreeNode*> q;
    q.push(root);
    while(!q.empty())
      {   
          int h=q.size();
          int ans=INT_MIN;
          while(h--)
          {
            TreeNode* t=q.front();
            q.pop();
            if(t->left)
               q.push(t->left);
            if(t->right)
               q.push(t->right);
            ans=max(ans,t->val);
           }
        v.push_back(ans);
       }
      return v;
    }
};

/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        if(!root)
             return root;
       queue<Node*> q;
       q.push(root);
        Node* b = new Node(0);
        b=root;
       Node* k = new Node();
       while(q.size())
       {
           int t = q.size();
           for(int i=1;i<=t;i++)
           {
               k = q.front();
               q.pop();
               if(i<=t-1)
                  k->next=q.front();
               
               
               if(k->left)
                  q.push(k->left);
               if(k->right)
                  q.push(k->right);
           }
           k->next=NULL;
       }
      return b; 
    }
};
